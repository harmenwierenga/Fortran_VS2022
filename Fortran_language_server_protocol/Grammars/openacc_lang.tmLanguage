<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
  <dict>
    <key>comment</key>
    <string>OpenACC rules for Fortran.</string>
    <key>scopeName</key>
    <string>source.openacc</string>
    <key>injectionSelector</key>
    <string>comment</string>
    <key>fileTypes</key>
    <array/>
    <key>injections</key>
    <dict>
      <key>source.fortran.free - ( string | comment )</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#line-continuation-operator</string>
          </dict>
        </array>
      </dict>
      <key>string.quoted.double.fortran</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#string-line-continuation-operator</string>
          </dict>
        </array>
      </dict>
      <key>string.quoted.single.fortran</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#string-line-continuation-operator</string>
          </dict>
        </array>
      </dict>
    </dict>
    <key>patterns</key>
    <array>
      <dict>
        <key>name</key>
        <string>meta.openacc.directive</string>
        <key>begin</key>
        <string>(?i)\G(\$(acc\b)&amp;?)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>comment.directive.openacc</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=[\n])</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#environment-variables</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#intrinsic-functions</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#operators</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#synchronization-constructs</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#end-directives</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#directives</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#clauses</string>
          </dict>
        </array>
      </dict>
    </array>
    <key>repository</key>
    <dict>
      <key>clauses</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>(?i)\b(collapse)\s*(\()</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>string.regexp.openacc</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.parentheses.left.openacc</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(\))</string>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.parentheses.right.openacc</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>name</key>
                <string>constant.numeric.openacc</string>
                <key>match</key>
                <string>\G\s*\d+</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#invalid-word</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>begin</key>
            <string>(?i)\b(copyin|copyout|copy|create|delete|no_create|present|attach|detach|deviceptr|device|host)\s*(\()</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>string.regexp.openacc</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.parentheses.left.openacc</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(\))</string>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.parentheses.right.openacc</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>begin</key>
            <string>(?i)\b(default)\s*(\()</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>string.regexp.openacc</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.parentheses.left.openacc</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(\))</string>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.parentheses.right.openacc</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>name</key>
                <string>string.regexp.openacc</string>
                <key>match</key>
                <string>(?i)\G(present|none)</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#invalid-word</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>begin</key>
            <string>(?i)\b(private)\s*(\()</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>string.regexp.openmp</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.parentheses.left.openmp</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(\))</string>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.parentheses.right.openmp</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>begin</key>
            <string>(?i)\b(firstprivate)\s*(\()</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>string.regexp.openacc</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.parentheses.left.openacc</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(\))</string>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.parentheses.right.openacc</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>begin</key>
            <string>(?i)\b(if|self)\s*(\()</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>string.regexp.openacc</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.parentheses.left.openacc</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(\))</string>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.parentheses.right.openacc</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>$self</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>begin</key>
            <string>(?i)\b(device_type|device_num|default_async)\s*(\()</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>string.regexp.openacc</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.parentheses.left.openacc</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(\))</string>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.parentheses.right.openacc</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>name</key>
                <string>string.regexp.openacc</string>
                <key>match</key>
                <string>(?i)\G(\w+)</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#invalid-word</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>name</key>
            <string>string.regexp.openacc</string>
            <key>match</key>
            <string>(?i)\b(if_present)\b</string>
          </dict>
          <dict>
            <key>name</key>
            <string>string.regexp.openacc</string>
            <key>match</key>
            <string>(?i)\b(finalize)\b</string>
          </dict>
          <dict>
            <key>name</key>
            <string>string.regexp.openacc</string>
            <key>match</key>
            <string>(?i)\b(independent|auto)\b</string>
          </dict>
          <dict>
            <key>name</key>
            <string>string.regexp.openacc</string>
            <key>match</key>
            <string>(?i)\b(gang|worker|vector)(\(\d+\))?\b</string>
          </dict>
          <dict>
            <key>name</key>
            <string>string.regexp.openacc</string>
            <key>match</key>
            <string>(?i)\b(async|wait)(\(\d+\))?\b</string>
          </dict>
          <dict>
            <key>name</key>
            <string>string.regexp.openacc</string>
            <key>match</key>
            <string>(?i)\b(seq)\b</string>
          </dict>
          <dict>
            <key>begin</key>
            <string>(?i)\b(num_(gangs|workers))\s*(\()</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>string.regexp.openacc</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.parentheses.left.openacc</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(\))</string>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.parentheses.right.openacc</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>$self</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>begin</key>
            <string>(?i)\b(vector_length)\s*(\()</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>string.regexp.openacc</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.parentheses.left.openacc</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(\))</string>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.parentheses.right.openacc</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>$self</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>begin</key>
            <string>(?i)\b(reduction)\s*(\()</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>string.regexp.openacc</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.parentheses.left.openacc</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(\))</string>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.parentheses.right.openacc</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>begin</key>
                <string>\G(?=\s*[^\)\n])</string>
                <key>end</key>
                <string>(:)|(?=\))</string>
                <key>endCaptures</key>
                <dict>
                  <key>1</key>
                  <dict>
                    <key>name</key>
                    <string>operator.colon.openacc</string>
                  </dict>
                </dict>
                <key>patterns</key>
                <array>
                  <dict>
                    <key>name</key>
                    <string>string.regexp.openacc</string>
                    <key>match</key>
                    <string>(?i)\G\s*(\+|\-|\*|\.and\.|\.or\.|\.eqv\.|\.neqv\.|\b(max|min|iand|ior|ieor)\b)</string>
                  </dict>
                  <dict>
                    <key>include</key>
                    <string>#invalid-word</string>
                  </dict>
                </array>
              </dict>
            </array>
          </dict>
          <dict>
            <key>begin</key>
            <string>(?i)\b(tile)\s*(\()</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>string.regexp.openacc</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.parentheses.left.openacc</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(\))</string>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.parentheses.right.openacc</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>name</key>
                <string>constant.tile.openacc</string>
                <key>match</key>
                <string>\G\s*\d+\s*(,\d+)*</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#invalid-word</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>begin</key>
            <string>(?i)\b(use_device)\s*(\()</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>string.regexp.openacc</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.parentheses.left.openacc</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(\))</string>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.parentheses.right.openacc</string>
              </dict>
            </dict>
          </dict>
        </array>
      </dict>
      <key>directives</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>comment</key>
            <string>loop-directive</string>
            <key>name</key>
            <string>string.regexp.openacc</string>
            <key>match</key>
            <string>(?i)\b(loop(\s*simd)?)\b</string>
          </dict>
          <dict>
            <key>comment</key>
            <string>declare-directive</string>
            <key>name</key>
            <string>string.regexp.openacc</string>
            <key>match</key>
            <string>(?i)\b(declare(\s*copy|\s*copyin|\s*copyout|\s*create|\s*present|\s*deviceptr|\s*device_resident|\s*link)?)\b</string>
          </dict>
          <dict>
            <key>comment</key>
            <string>parallel-directive</string>
            <key>name</key>
            <string>string.regexp.openacc</string>
            <key>match</key>
            <string>(?i)\b(parallel(\s*loop)?)\b</string>
          </dict>
          <dict>
            <key>comment</key>
            <string>kernels-directive</string>
            <key>name</key>
            <string>string.regexp.openacc</string>
            <key>match</key>
            <string>(?i)\b(kernels(\s*loop)?)\b</string>
          </dict>
          <dict>
            <key>comment</key>
            <string>serial-directive</string>
            <key>name</key>
            <string>string.regexp.openacc</string>
            <key>match</key>
            <string>(?i)\b(serial(\s*loop)?)\b</string>
          </dict>
          <dict>
            <key>comment</key>
            <string>data-directive</string>
            <key>name</key>
            <string>string.regexp.openacc</string>
            <key>match</key>
            <string>(?i)\b(data)\b</string>
          </dict>
          <dict>
            <key>comment</key>
            <string>enter-data-directive</string>
            <key>name</key>
            <string>string.regexp.openacc</string>
            <key>match</key>
            <string>(?i)\b(enter data)\b</string>
          </dict>
          <dict>
            <key>comment</key>
            <string>exit-data-directive</string>
            <key>name</key>
            <string>string.regexp.openacc</string>
            <key>match</key>
            <string>(?i)\b(exit data)\b</string>
          </dict>
          <dict>
            <key>comment</key>
            <string>host-data-directive</string>
            <key>name</key>
            <string>string.regexp.openacc</string>
            <key>match</key>
            <string>(?i)\b(host_data)\b</string>
          </dict>
          <dict>
            <key>comment</key>
            <string>executable-directive</string>
            <key>name</key>
            <string>string.regexp.openacc</string>
            <key>match</key>
            <string>(?i)\b(init|shutdown|set|update|wait)\b</string>
          </dict>
          <dict>
            <key>comment</key>
            <string>cache-directive</string>
            <key>name</key>
            <string>string.regexp.openacc</string>
            <key>match</key>
            <string>(?i)\b(cache)\b</string>
          </dict>
        </array>
      </dict>
      <key>end-directives</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>comment</key>
            <string>end-atomic-directive</string>
            <key>name</key>
            <string>string.regexp.openacc</string>
            <key>match</key>
            <string>(?i)\b(end\s*atomic)\b</string>
          </dict>
          <dict>
            <key>comment</key>
            <string>end-loop-directive</string>
            <key>name</key>
            <string>string.regexp.openacc</string>
            <key>match</key>
            <string>(?i)\b(end\s*loop)\b</string>
          </dict>
          <dict>
            <key>comment</key>
            <string>end-data-directive</string>
            <key>name</key>
            <string>string.regexp.openacc</string>
            <key>match</key>
            <string>(?i)\b(end\s*data)\b</string>
          </dict>
          <dict>
            <key>comment</key>
            <string>end-host-data-directive</string>
            <key>name</key>
            <string>string.regexp.openacc</string>
            <key>match</key>
            <string>(?i)\b(end\s*host_data)\b</string>
          </dict>
          <dict>
            <key>comment</key>
            <string>end-parallel-directive</string>
            <key>name</key>
            <string>string.regexp.openacc</string>
            <key>match</key>
            <string>(?i)\b(end\s*parallel(\s*loop)?)\b</string>
          </dict>
          <dict>
            <key>comment</key>
            <string>end-kernels-directive</string>
            <key>name</key>
            <string>string.regexp.openacc</string>
            <key>match</key>
            <string>(?i)\b(end\s*kernels(\s*loop)?)\b</string>
          </dict>
          <dict>
            <key>comment</key>
            <string>end-serial-directive</string>
            <key>name</key>
            <string>string.regexp.openacc</string>
            <key>match</key>
            <string>(?i)\b(end\s*serial(\s*loop)?)\b</string>
          </dict>
        </array>
      </dict>
      <key>environment-variables</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>variable.parameter.openacc</string>
            <key>match</key>
            <string>(?i)\b(acc_device_type)\b</string>
          </dict>
          <dict>
            <key>name</key>
            <string>variable.parameter.openacc</string>
            <key>match</key>
            <string>(?i)\b(acc_device_num)\b</string>
          </dict>
          <dict>
            <key>name</key>
            <string>variable.parameter.openacc</string>
            <key>match</key>
            <string>(?i)\b(acc_proflib)\b</string>
          </dict>
        </array>
      </dict>
      <key>intrinsic-functions</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>(?i)\b(acc_(get|set)_(num_devices|device_type|device_num|default_async))\s*(\()</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>support.function.intrinsic.openacc</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.parentheses.left.openacc</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(\))</string>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.parentheses.left.openacc</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>$self</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>begin</key>
            <string>(?i)\b(acc_get_(current_cuda_device|current_cuda_context|cuda_stream))\s*(\()</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>support.function.intrinsic.openacc</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.parentheses.left.openacc</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(\))</string>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.parentheses.left.openacc</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>$self</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>begin</key>
            <string>(?i)\b(acc_get_(current_opencl_device|current_opencl_context|opencl_queue))\s*(\()</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>support.function.intrinsic.openacc</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.parentheses.left.openacc</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(\))</string>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.parentheses.left.openacc</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>$self</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>begin</key>
            <string>(?i)\b(acc_get_property)\s*(\()</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>support.function.intrinsic.openacc</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.parentheses.left.openacc</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(\))</string>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.parentheses.left.openacc</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>$self</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>synchronization-constructs</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>(?i)\G\s+(atomic)\b</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>string.regexp.openacc</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(?=[$\n])</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>begin</key>
                <string>(?i)\G\s+(capture|read|write|update)\b</string>
                <key>beginCaptures</key>
                <dict>
                  <key>1</key>
                  <dict>
                    <key>name</key>
                    <string>string.regexp.openacc</string>
                  </dict>
                </dict>
                <key>end</key>
                <string>(?=[$\n])</string>
                <key>patterns</key>
                <array>
                  <dict>
                    <key>name</key>
                    <string>string.regexp.openacc</string>
                    <key>match</key>
                    <string>(?i)\G\s+(seq_cst)\b</string>
                  </dict>
                  <dict>
                    <key>include</key>
                    <string>#invalid-word</string>
                  </dict>
                </array>
              </dict>
              <dict>
                <key>name</key>
                <string>string.regexp.openacc</string>
                <key>match</key>
                <string>(?i)\G\s+(seq_cst)\b</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#invalid-word</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>invalid-word</key>
      <dict>
        <key>name</key>
        <string>invalid.error.openacc</string>
        <key>match</key>
        <string>(?i)\b\w+\b</string>
      </dict>
    </dict>
  </dict>
</plist>